==============================================================
Plan directory will hold your plans for realizing your goals, with each 
new draft named for its born day, in the format shown. Each new draft of 
your plan should address prioritization, workload sharing, and chronology:

Plan Updates {
Which jobs are most crucial?
Setting the basic functionality of the game where players can blow each other up and stuff. Then would come to implementation of 
maze algorithms into our maps to promote diverse maps leading to more fun. 
Which components constitute core functionality (vs non-essential)?
Core- Placing of bombs 
Elimination of players 
Movement of players
Maze implementation 
CPU movement 
Non-essential- 
Score 
Lives counter 
Main Screen
Power-ups
Abilitiy to choose color of player
Which components are prerequisites for others?
To be able to implement maze algorithms we have to set a grid for a basic map layout which we will 
use our maze algorithms to edit and pop out a mazi-fied version. 
Which tasks can be delegated, and which must be collaboratively tackled?
Movement and elimination can be delegated. CPU movement can be delegated. 
Maze implementation must be collaboratively tackled. As should bug fixing. 
What is the timeline, and how does it accommodate setbacks, course changes?
Finish all the core-functionality except for CPU movement and maze implementation by 6/1.
Finish main screen and color choosing over weekend. 
Finish CPU movement by 6/4 night. 
Finish Maze implementation by 6/5. 
Finish rest by 6/6. 
Review and fix bugs. 
}
==============================================================

We are recreating a multiplayer game called Bomb It, where players control 
keys to navigate a maze, set bombs to blow-up removable walls, and beating 
other players by placing a bomb within their range, potentially the use of 
power-ups. Our version, the Attack on the Vegetables, utilizes processing 
to materialize a simplied version of Bomb It.

We will have one overlaying processing file called game, which operates the
actual game (the Driver file). Then we will create different player files 
and bomb files.
